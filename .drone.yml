---
kind: pipeline
type: docker
name: build

steps:
- name: api docker build
  image: plugins/docker
  settings:
    dockerfile: api/Dockerfile
    context: api
    repo: docker-hub.unepgrid.ch/mapx/mx-api-node
    registry: docker-hub.unepgrid.ch
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    tags:
    - latest
    - 1.6.66-alpine

- name: app npm run prod
  image: node:8-alpine
  commands:
  - apk add git python build-base
  - cd app/
  - npm ci
  - npm run prod

- name: app docker build
  image: plugins/docker
  settings:
    dockerfile: app/Dockerfile
    context: app
    repo: docker-hub.unepgrid.ch/mapx/mx-app-shiny
    registry: docker-hub.unepgrid.ch
    username:
      from_secret: docker_username
    password:
      from_secret: docker_password
    tags:
    - latest
    - 1.6.66-debian

trigger:
  ref:
  - refs/tags/*

---
kind: pipeline
type: docker
name: api test

steps:
- name: api
  image: docker-hub.unepgrid.ch/mapx/mx-api-node:1.6.66-alpine
  commands:
  - set -o allexport; source mapx.dev.default_env; set +o allexport
  - while [ "`PGPASSWORD=$POSTGRES_PASSWORD psql -h pg -U postgres -l 2>/dev/null | grep mapx_test | wc -l`" = "0" ]; do echo "Waiting service 'pg'..."; sleep 5; done
  - echo "Service 'pg' ready!..."
  - cd api/
  - npm ci
  - npm run test

depends_on:
- build

services:
- name: pg
  image: mdillon/postgis:10-alpine
  commands:
  - set -o allexport; source mapx.dev.default_env; set +o allexport
  - cp -a /drone/src/pg/init/* /docker-entrypoint-initdb.d/
  - docker-entrypoint.sh postgres
- name: redis
  image: redis:alpine
  ports:
  - 6379
  commands:
  - set -o allexport; source mapx.dev.default_env; set +o allexport
  - mkdir -p /usr/local/etc/redis/; cp -a redis.conf /usr/local/etc/redis/redis.conf
  - redis-server /usr/local/etc/redis/redis.conf
